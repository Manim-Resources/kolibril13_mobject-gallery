{
  "Mobjects_Basics_000_Dot.png": "d = Dot(color = YELLOW)",
  "Mobjects_Basics_001_Circle.png": "mob = Circle(fill_opacity=1, fill_color= ORANGE, stroke_color=YELLOW)",
  "Mobjects_Basics_002_Annulus.png": "mob = Annulus(inner_radius=0.5, outer_radius=1.2,fill_color= DARK_BLUE, stroke_color=YELLOW, stroke_width=2)",
  "Mobjects_Basics_003_Ellipse.png": "mob = Ellipse(color = YELLOW)",
  "Mobjects_Basics_004_Sector.png": "mob = Sector(inner_radius=0.5, outer_radius=1.2,fill_color= DARK_BLUE, stroke_color=YELLOW, stroke_width=2)",
  "Mobjects_Basics_005_Arc.png": "mob= Arc(radius=1.3, start_angle=-PI/16, angle=PI,color= YELLOW)",
  "Mobjects_Basics_006_ArcBetweenPoints.png": "mob= ArcBetweenPoints(start=2 * RIGHT, end=2*LEFT, stroke_color=YELLOW)",
  "Mobjects_Basics_007_Line.png": "line = Line(color= YELLOW)",
  "Mobjects_Basics_008_DashedLine.png": "mob = DashedLine(color= YELLOW)",
  "Mobjects_Basics_009_DashedCircle.png": "circ = Circle(stroke_color=YELLOW)\nmob = DashedVMobject(circ, num_dashes=10)",
  "Mobjects_Basics_010_Square.png": "square = Square(color= YELLOW)",
  "Mobjects_Basics_011_RoundedRectangle1.png": "mob= RoundedRectangle(corner_radius=0.5, color= YELLOW)",
  "Mobjects_Basics_012_RoundedRectangle2.png": "mob = RoundedRectangle(corner_radius=0.8, height=2.2, width=2.2,color= YELLOW)",
  "Mobjects_Basics_013_Elbow.png": "Elbow(width=0.5, angle=0*DEGREES,color= YELLOW)",
  "Mobjects_Basics_014_RightAngle.png": "line1 = Line( ORIGIN, RIGHT )\nline2 = Line( ORIGIN, UP )\nmob = RightAngle(line1, line2, color=YELLOW, stroke_width=7)",
  "Mobjects_Basics_015_Angledot.png": "line1 = Line( LEFT*0.2, RIGHT )\nline2 = Line( DOWN*0.2, UP )\na= Angle(line1, line2, dot=True, color=YELLOW, dot_color=YELLOW)",
  "Mobjects_Basics_016_Angle_get_value.png": "line1 = Line((LEFT+(1/3)*UP)*0.1, RIGHT+(1/3)*DOWN)\nline2 = Line((DOWN+(1/3)*RIGHT)*0.1, UP+(1/3)*LEFT)\nangle = Angle(line1, line2, radius=0.3)\nvalue = Integer(angle.get_value(degrees=True), unit=\"^{\\circ}\", color=YELLOW)\nvalue.next_to(angle, UR,buff=0)",
  "Mobjects_Basics_017_Triangle.png": "mob = Triangle(color = YELLOW)",
  "Mobjects_Basics_018_Cross.png": "Cross(stroke_color = YELLOW)",
  "Mobjects_Basics_019_Star.png": "star = Star(color = YELLOW)",
  "Mobjects_Basics_020_RegularPolygram5.png": "mob= RegularPolygram(5,color= YELLOW)",
  "Mobjects_Basics_021_RegularPolygram6.png": "mob= RegularPolygram(6,color= YELLOW)",
  "Mobjects_Basics_022_RegularPolygon5.png": "mob= RegularPolygon(5,color= YELLOW)",
  "Mobjects_Basics_023_RegularPolygon6.png": "mob= RegularPolygon(6,color= YELLOW)",
  "Mobjects_Basics_024_CutOut.png": "s1 = Square().scale(2.5)\ns2 = Star().shift(LEFT)\ns3 = Circle().shift(RIGHT)\nc = Cutout(s1, s2, s3, fill_opacity=1, color=YELLOW)",
  "Mobjects_Basics_025_Arrow.png": "mob = Arrow(color= YELLOW)",
  "Mobjects_Basics_026_ArrowSquareTip.png": "mob = Arrow(color= YELLOW, tip_shape=ArrowSquareTip)",
  "Mobjects_Basics_027_ArrowSquareFilledTip.png": "mob = Arrow(color= YELLOW, tip_shape=ArrowSquareFilledTip)",
  "Mobjects_Basics_028_ArrowCircleTip.png": "mob = Arrow(color= YELLOW, tip_shape=ArrowCircleTip)",
  "Mobjects_Basics_029_ArrowCircleFilledTip.png": "mob = Arrow(color= YELLOW, tip_shape=ArrowCircleFilledTip)",
  "Mobjects_Basics_030_DoubleArrow.png": "mob = DoubleArrow(color= YELLOW)",
  "Mobjects_Basics_031_CurvedArrow.png": "mob = CurvedArrow(LEFT,RIGHT,color= YELLOW)",
  "Mobjects_Basics_032_ParametricFunction.png": "mob = ParametricFunction(lambda t: [t,0.2*np.sin(10*t),0],t_range = [-TAU, TAU],color= YELLOW)",
  "Mobjects_Basics_033_CubicBezier.png": "p1 = [-3, 1, 0]\np1b=  p1 + 5 * RIGHT + 2 * UP\np2 = [3, -1, 0]\np2b = p2 + 5 * LEFT\nbezier = CubicBezier(p1,p1b, p2b, p2, color=YELLOW)",
  "Mobjects_Basics_034_Brace.png": "mob = Brace(LEFT,RIGHT,color= YELLOW)",
  "Mobjects_Basics_035_BraceLabel.png": "l=Line(ORIGIN, RIGHT*1.4)\nmob= BraceLabel(l, text= r\"14 \\, \text{cm}\", color= YELLOW, buff=0.1)\nmob.submobjects[1].set_color(YELLOW)\nself.add(VGroup(l,mob).move_to(ORIGIN))",
  "Mobjects_Basics_036_ArcBrace.png": "arc = Arc(radius=0.5,start_angle=0,angle=5*PI/6)\nbrace = ArcBrace(arc).set_color(YELLOW)",
  "Mobjects_Basics_037_AnnotationDot.png": "mob = AnnotationDot(fill_color=RED)",
  "Mobjects_Basics_038_LabeledDot.png": "mob = LabeledDot(Tex(\"42\", color=BLACK), color=YELLOW)",
  "Mobjects_Basics_039_ManimBanner.png": "mob = ManimBanner()",
  "Mobjects_Basics_040_HTMLBanner.png": "self.camera.background_color = \"#ece6e2\"\nlogo_green = \"#87c2a5\"\nlogo_blue = \"#525893\"\nlogo_red = \"#e07a5f\"\ncircle = Circle(color=logo_green, fill_opacity=1).shift(LEFT)\nsquare = Square(color=logo_blue, fill_opacity=1).shift(UP)\ntriangle = Triangle(color=logo_red, fill_opacity=1).shift(RIGHT)\nlogo = VGroup(triangle, square, circle).scale(1.3)",
  "Mobjects_Basics_041_ImageMobject.png": "mob = ImageMobject(image)",
  "Mobjects_Basics_042_ImageMobject_nearest.png": "np.random.seed(41)\na= np.random.randint(0, 255, size=(3, 4))\nimg = ImageMobject(np.uint8(a))\nimg.height = 6\nimg.set_resampling_algorithm(RESAMPLING_ALGORITHMS[\"nearest\"])",
  "Mobjects_Basics_043_ImageMobject_cubic.png": "np.random.seed(41)\na= np.random.randint(0, 255, size=(3, 4))\nimg = ImageMobject(np.uint8(a))\nimg.height = 6\nimg.set_resampling_algorithm(RESAMPLING_ALGORITHMS[\"cubic\"])",
  "Mobjects_Basics_044_SVGMobject.png": "mob = SVGMobject(\"svg_logo.svg\")\nself.add(mob)",
  "Mobjects_Basics_045_Matrix.png": "mob = Matrix([[9, 3], [1, 5]])\nbra = mob.get_brackets()\nbra.set_color(YELLOW)",
  "Mobjects_Basics_046_Matrix_SurroundingRectangle.png": "mob = Matrix([[\"\\pi\", 3], [1, 5]])\nmob.add(SurroundingRectangle(mob.get_columns()[1]))",
  "Mobjects_Basics_047_MobjectMatrix.png": "a = Circle(color=YELLOW).scale(0.3)\nb = Square().scale(0.3)\nc = MathTex(\"\\pi\").scale(2)\nd = Star(color=YELLOW).scale(0.3)\nmob = MobjectMatrix([[a, b], [c, d]])",
  "Mobjects_Basics_048_Matrix_bracket.png": "mob = Matrix([[2, 0, 4], [-1, 1, 5]],\n            v_buff=0.8,\n            h_buff=0.8,\n            bracket_h_buff=SMALL_BUFF,\n            bracket_v_buff=SMALL_BUFF,\n            left_bracket=\"\\{\",\n            right_bracket=\"\\}\")\nmob.set_row_colors(YELLOW, YELLOW)"
}